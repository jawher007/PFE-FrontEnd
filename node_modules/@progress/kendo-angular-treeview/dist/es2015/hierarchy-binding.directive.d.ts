/**-----------------------------------------------------------------------------------------
* Copyright Â© 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { OnInit } from '@angular/core';
import { DataBoundComponent } from './data-bound-component';
import { TreeViewFilterSettings } from './treeview-filter-settings';
import { DragAndDropDirective } from './drag-and-drop/drag-and-drop.directive';
/**
 * A directive which encapsulates the retrieval of child nodes.
 */
export declare class HierarchyBindingDirective implements OnInit {
    protected treeView: DataBoundComponent;
    private dragAndDropDirective?;
    /**
     * The field name which holds the data items of the child component.
     */
    /**
    * The field name which holds the data items of the child component.
    */
    childrenField: string;
    /**
     * The nodes which will be displayed by the TreeView.
     */
    nodes: any[];
    /**
     * @hidden
     * A callback which determines whether a TreeView node should be rendered as hidden.
     */
    isVisible: (item: object, index: string) => boolean;
    /**
     * Applies a filter and changes the visibility of the component's nodes accordingly.
     * To customize the built-in filtering, use the [filterSettings]({% slug api_treeview_hierarchybindingdirective %}#toc-filtersettings) prop.
     */
    filter: string;
    /**
     * The settings which are applied when performing a filter on the component's data.
     */
    filterSettings: TreeViewFilterSettings;
    private _childrenField;
    /**
     * Stores the unfiltered nodes
     */
    private filterData;
    private visibleNodes;
    private _filterSettings;
    constructor(treeView: DataBoundComponent, dragAndDropDirective?: DragAndDropDirective);
    ngOnInit(): void;
    /**
     * @hidden
     */
    handleFilterChange(term: string): void;
    private updateNodesVisibility;
}
